/*
 * NewJFrame.java
 *
 * Created on 5 de noviembre de 2009, 22:30
 */
package Semaforo;


import Problemadesincronizacion.Plataforma;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author  red
 */
public class Semaforo extends javax.swing.JFrame {

    private DefaultListModel entrada;
    private DefaultListModel salida;
     private int i,j;
    /** Creates new form NewJFrame */
    public Semaforo() {
         
        

            initComponents();
            entrada = new DefaultListModel();
            jList1.setModel(entrada);
            salida = new DefaultListModel();
            jList2.setModel(salida);

            jTextArea1.setEditable(false);


            Semaphore sem = new Semaphore(1);

            Thread[] bees = new Thread[50]; //cantidad maxima de buffer

            for (i = 0; i < 50; i++) {
                //se genera el hilo
                bees[i] = new Thread(new Worker(sem, "Worker " + (new Integer(i)).toString()));
            }

            for (j = 0; j < 50; j++) {
                bees[j].start();
              
            }

         




    }

    /**
     * critical and non-critical sections are simulated by sleeping
     * for a random amount of time between 0 and 3 seconds.
     */
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Metodo de sincronizacion del semaforo");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/semaforo1.JPG"))); // NOI18N
        jButton1.setText("jButton1");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Dijkstra.JPG"))); // NOI18N
        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                misemaforo(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList2);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Edsger Wybe Dijkstra nació en Rotterdam, (Holanda)\nen 1930.\nSus padres eran ambos intelectuales\ny él recibió una excelente educación.\nSu padre era químico y su madre matemática.\nA principios de la década de los 60, Dijkstra aplicó la idea \nde la exclusión mutua a las comunicaciones\n entre una computadora y su teclado.\nSu solución de exclusión mutua ha sido usada \npor muchos procesadores modernos y tarjetas de memoria desde 1964,\n cuando IBM la utilizó por primera vez en la arquitectura del IBM 360.\n El siguiente problema del que se ocupó Dijkstra fue el de los filósofos comensales.\n En este problema, cinco filósofos están sentados en una mesa circular con un plato de arroz delante y un palillo a cada lado, de manera que hay cinco palillos en total. \nEl problema trata sobre el uso de recursos comunes sin que los procesos\n (los filósofos) lleguen a una situación de bloqueo mutuo, inanición y que los recursos sean usados de la manera más eficiente por todos los procesos.");
        jScrollPane3.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 224, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void misemaforo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_misemaforo
        // TODO add your handling code here:
  
    
        System.exit(0);
  
   

        
        
    }//GEN-LAST:event_misemaforo
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Semaforo().setVisible(true);

            }
        });


    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
    ///////////////////////////////////////
    //////////////////////////
  
    // Creamos una clase Semaforo 
    public class Semaphore {

        private int value;

        public Semaphore(int value) {
            this.value = value;
        }

        public synchronized void acquire() {
            while (value <= 0) {
                try {
                    wait(); 
                } catch (InterruptedException e) {
                }
            }

            value--;
        }

        public synchronized void release() {
            ++value;

            notify();
        }
    }
////////////////////////
    // Creamos la clase que quiere entrar y saldra 

    
public class Worker implements Runnable {

	private Semaphore sem;

	private String name;

	public Worker(Semaphore sem, String name) {
		this.name = name;
		this.sem = sem;
	}

	public void run() {
		while (true) {
                try {
                    sem.acquire();//con este metodo bloqueamos
                    //el semaforo 
                    //se genera el wait


                    //MutualExclusionUtilities.criticalSection(name);
                    System.out.println(name + " in critical section");
                    entrada.addElement(name + " in critical section");
                    Thread espera = new Thread();
                    espera.sleep(1000);
                    
                    sem.release();//con este metodo liberamos el semaforo
                    //para los demas procesos
                    // se genera el signal()
                    
                    espera.sleep(1000);
                    salida.addElement(name + " off critical section");
                    System.out.println(name + " off critical section");
                    //MutualExclusionUtilities.nonCriticalSection(name);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Semaforo.class.getName()).log(Level.SEVERE, null, ex);
                }
			//MutualExclusionUtilities.nonCriticalSection(name);
		}
	}

}
   
    
    
}















